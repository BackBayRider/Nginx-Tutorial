worker_processes 4;
events { worker_connections 1024; }

http {
    # Performance
    # See, this article for why we combine the next three settings 
    # https://thoughts.t37.net/nginx-optimization-understanding-sendfile-tcp-nodelay-and-tcp-nopush-c55cdd276765 
    sendfile on; # Allow file transfer in kernel; may need to be off on VirtualBox
    # Don't send out partial frames; this increases throughput since TCP frames are filled up before being sent out.
    tcp_nopush on;
    # we are serving http, so disable Nagle's algorithm for TCP packet buffering
    tcp_nodelay on;
    # limit the requests coming from one IP address in to an average of 5/s, only us 10MB of storage to track
    limit_req_zone $binary_remote_addr zone=one:10m rate=5r/s;
    
    
    # Compression 
    gzip on;
    gzip_vary on;
    gzip_min_length 256;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;
        gzip_disable "MSIE [1-6]\.";

    # Security: 
    server_tokens off; # Stop exposing the nginx version
    # https://www.owasp.org/index.php/OWASP_Secure_Headers_Project#tab=Headers
    add_header X-Frame-Options SAMEORIGIN; # don't allow the browser to render in an iframe
    add_header X-Content-Type-Options nosniff; # prevent content sniffing
    add_header X-XSS-Protection "1; mode=block";


    # Timeouts: Use the lowest sensible timeouts 
    keepalive_timeout 30;
    client_body_timeout 10; 
    client_header_timeout 10; 
    send_timeout 10;
    
    # Don't walk to the app, for something that we already have
    proxy_cache_path /tmp/cache levels=1:2 keys_zone=cache:30m max_size=1G;

    # Sites

    server {
        listen 80;
        # If you came this way, don't come this way again
        add_header Strict-Transport-Security max-age=15768000;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl default_server;

        ssl_certificate /etc/ssl/certs/greetings_key.crt;
        ssl_certificate_key /etc/ssl/private/greetings_key.key;
        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_ecdh_curve secp384r1;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;

        # Do not add the Strict-Transport-Security header or chose an appropriate max-age if you plan to disable SSL in the future.
        # add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
        
        error_page 401 403 404 /404.html; # By default, don't leak information about security
        location / {
            try_files /maintenance.html $uri $uri/ @kestrel; #allow site mainteinance; serve static files before kestrel gets request
        } 

        location @kestrel {
            proxy_pass         http://greetingsweb:5000;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_cache cache;
            proxy_cache_valid 30m;
        }
    }
}
